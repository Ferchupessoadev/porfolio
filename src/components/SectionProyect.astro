---
import HTMLIcon from "./icons/HTMLIcon.astro";
import CssIcon from "./icons/CssIcon.astro";
import JsIcon from "./icons/JsIcon.astro";
import AstroIcon from "./icons/AstroIcon.astro";
import PHPIcon from "./icons/PHPIcon.astro";
import Code from "./Code.astro";
import Deploy from "./Deploy.astro";

const { title, description, hrefImg, skills, urlCode, deployUrl } = Astro.props;
---

<div class="w-full h-max lg:h-80 flex lg:flex-row flex-col gap-5">
	<div class="w-full lg:w-1/2 overflow-hidden">
		<img
			class="rounded-2xl transition-transform duration-300 ease-in bg-no-repeat bg-center bg-cover dark:hover:scale-[1.02] size-full"
			src={hrefImg}
		/>
	</div>
	<div class="w-full flex flex-col h-max lg:w-1/2 gap-3">
		<p
			class="dark:text-white text-lg md:text-4xl text-black font-firaCode font-extrabold"
		>
			{title}
		</p>
		<p class="text-[17px] font-mono text-gray-800 dark:text-gray-300">
			{description}
		</p>
		<div class="flex gap-1">
			{
				urlCode && deployUrl ? (
					<>
						<Code hrefUrl={urlCode} />
						<Deploy hrefUrl={deployUrl} />
					</>
				) : (
					<Deploy hrefUrl={deployUrl} />
				)
			}
		</div>
		<div>
			<p class="text-[rgba(0_0_0)] dark:text-[rgba(255_255_255)]">
				Tecnologias utilizadas.
			</p>
			<div class="flex gap-2">
				{
					skills.map((skill) => {
						switch (skill) {
							case "HTML":
								return <HTMLIcon class="size-7" />;
							case "Css":
								return <CssIcon class="size-7" />;
							case "Js":
								return <JsIcon class="size-7" />;
							case "PHP":
								return (
									<PHPIcon class="size-7 text-[rgb(0_0_0)] dark:text-[rgb(255_255_255)]" />
								);
							case "Astro":
								return (
									<AstroIcon class="size-7 text-[rgb(0_0_0)] dark:text-[rgb(255_255_255)]" />
								);
						}
					})
				}
			</div>
		</div>
	</div>
</div>
